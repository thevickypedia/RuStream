name: Create release and upload artifact

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - '.github/**'

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GIT_TOKEN }}

      - name: Create a GitHub release
        id: create-release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          prerelease: ${{ github.ref != 'refs/heads/main' &&  'true' || 'false' }}

  upload_assets:
    needs: Release
    strategy:
      matrix:
        platform:
          - release_for: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bin: rustream
            name: RuStream-Linux-x86_64.tar.gz
            command: build

          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: rustream.exe
            name: RuStream-Windows-x86_64.zip
            command: build

          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: rustream
            name: RuStream-Darwin-x86_64.tar.gz
            command: build

          - release_for: RaspberryPi
            os: ubuntu-20.04
            target: arm-unknown-linux-gnueabihf
            bin: rustream
            name: RuStream-RaspberryPi.tar.gz
            command: build

    name: Upload asset for ${{ matrix.platform.release_for }}
    runs-on: ${{ matrix.platform.os }}
    permissions:
      contents: write

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Debug Python Environment
        run: |
          python --version
          echo "PYTHONPATH: $PYTHONPATH"
          echo "PATH: $PATH"
        shell: bash

      - name: Build rust binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          args: "--release"
          working-directory: src

      - name: Copy artifacts to folder and compress non windows
        if: ${{ matrix.platform.os != 'windows-latest' }}
        run: |
          mkdir -p rustream
          cp src/target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }} rustream/${{ matrix.platform.bin }}
          cp -r frontend/build/* rustream/
          tar -zcvf ${{ matrix.platform.name }} rustream/

      - name: Copy artifacts to folder and compress Windows
        if: ${{ matrix.platform.os == 'windows-latest' }}
        run: |
          mkdir -p rustream
          cp src/target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }} rustream/${{ matrix.platform.bin }}
          cp -r frontend/build/* rustream/
          Compress-Archive -DestinationPath  ${{ matrix.platform.name }} -Path rustream/

      - name: upload asset
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ matrix.platform.name }}
